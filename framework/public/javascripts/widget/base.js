define(function (require, exports, module) {	var	$ = require('../lib/jquery-1.10.2.min');	var slice = Array.prototype.slice;    /**	 * @exports base	 * @description base对象提供一些UI工具	 */	var _base = module.exports = {		/**		 *		 * @param {String|Array} id 模板的id		 * @returns {HtmlString} 模板字符串		 */		getInlineTpl: function (id) {			var idArr, result = [];			$.type(id)=='string' && (idArr = []) && idArr.push(id);			$.isArray(id) && (idArr = id);			$.each(idArr, function (index,item) {				result.push($('#'+item).html());			});			return result.join('');		},        toDom:function(html){            var div=document.createElement('div');            div.innerHTML=html;            return div.childNodes[0];        },        registerViews:function(){            var args = slice.call(arguments,0);            var views = this.views =  this.views || {};            if(args.length ===1 && $.isPlainObject(args[0])){                var obj = args[0];                $.each(obj,function(key,value){                    views[key]=value;                });            }            if(args.length===2 && $.type(args[0])=='string' && $.isFunction(args[1])){                views[args[0]]=args[1];            }        },        loadView:function(name){            var args = slice.call(arguments,1);            this.views[name].apply(this,args);        },        registerModels:function(){            var args = slice.call(arguments,0);            var models = this.models = this.models || {};            if(args.length===1 && $.isPlainObject(args[0])){                var obj = args[0];                $.each(obj,function(key,value){                    models[key] = value;                });            }            if(args.length ===2 && $.type(args[0]) && $.isFunction(args[1])){                models[args[0]] = args[1];            }        },        loadModel:function(name){            var args = slice.call(arguments,1);            this.models[name].apply(this,args);        }	};});